@startuml

package EngineContextModule
{
    class IEngineContext
    {
        +IEngineContext();
        +virtual ~IEngineConext();

        +virtual void initMinor() = 0;
        +virtual void initMajor() = 0;
        +virtual void tick(float deltaTime) = 0;
        +virtual void shutDown() = 0;
    }

    class EngineConfig <<singletone>>
    {
        -void* m_configData;
        -EngineConfig() = default;
        -~EngineConfig() = default;
        -EngineConfig(const EngineConfig&) = delete;
        -EngineConfig& operator=(const EngineConfig&) = delete;

        +static EngineConfig& getInstance();
        +uint32_t getFieldFromConfig(const string& fieldName) = 0;
    }

    class Engine
    {
        -unique_ptr<IEngineContext> m_engineContext;

        +Engine();
        +~Engine();
        +Engine(const Engine& app) = delete;
        +const Engine& operator=(const Engine rhs) = delete;
        +void run();

        -void startupModules();
        -void startupEngineContextObject();
        -void initMajorEngineContext();
        -void engineTick();
        -void shutDownModules();
    }

    Engine *-- IEngineContext
    Engine <.. EngineConfig
}

@enduml