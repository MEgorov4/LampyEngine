@startuml
package WindowModule
{
    class Window
    {
        -GLFWwindow* m_window;
        -bool m_framebufferResized = false;

        +Window(int width, int height, const char* titile, GraphicsAPI api);
        +~Window();

        +void resetResizedFlag();
        +void pollEvents();
        +void setKeyCallBack(GLFWkeyfun keyCallback);
        +void setCursorPositionCallback(GLFWcursorposfun cursorPosCallback);
        +void setScrollBallback(GLFWscrollfun scrollCallback);

        +bool glfwWindowIsValid() const;
        +bool shouldClose();
        +bool wasResized() const;

        +float currentTimeInseconds();

        +GLFWwindow* getGLFWWindow();
        +VkExtent2D getExtent();
        +VkSurfaceKHR getWindowSurface(VkInstance instance);
        +vector<const char*> getRequiredInstancewExtensions();
    }

    class WindowModule
    {
        -unique_ptr<Window> m_window;

        +static WindowModule& getInstance();
        +void startup(int width, int height, const char* title, GraphicsAPI api);
        +void shutdown();
        +Window* getWindow();
    }

    WindowModule *-- Window
}
@enduml