name: Build and Test LampyEngine

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Debug]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python (required for Conan)
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Install dependencies for Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl-dev libgl1-mesa-dev libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev \
                                libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxext-dev \
                                libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev \
                                libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev \
                                libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev \
                                libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev \
                                libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev \
                                libxcb-cursor-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev libxcb-composite0-dev \
                                libxcb-ewmh-dev libxcb-res0-dev

    - name: Install Conan
      run: pip install conan

    - name: Detect Conan Profile
      run: conan profile detect --force

    - name: Install dependencies with Conan
      run: |
        mkdir build
        conan install . --build=missing -s build_type=${{ matrix.build_type }} -c tools.system.package_manager:mode=install

    - name: Configure CMake
      run: |
        cd build
        cmake .. -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build project
      run: |
        cd build
        cmake --build . --config ${{ matrix.build_type }}

    - name: Run Tests
      run: |
        ctest --test-dir ./build/ --output-on-failure -C Debug
