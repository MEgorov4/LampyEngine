name: CI Integration Tests on Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-ubuntu-debug:
    name: Build and Test on Ubuntu (Debug)
    runs-on: ubuntu-latest

    steps:
      # 1. Проверка кода из репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Установка Python (необходим для Conan)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3. Установка Conan
      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan

      # 4. Кэширование Conan пакетов
      - name: Cache Conan Packages
        uses: actions/cache@v3
        with:
          path: ~/.conan
          key: ${{ runner.os }}-conan-${{ hashFiles('conanProfileDebugLinux') }}
          restore-keys: |
            ${{ runner.os }}-conan-

      # 5. Установка системных пакетов
      #    Теперь, благодаря [conf], Conan будет устанавливать необходимые системные пакеты.
      #    Однако, некоторые пакеты могут требовать явной установки.
      #    В данном случае, Conan должен сам установить 'libgl1-mesa-dev'.
      #    Если это не происходит, можно добавить шаг для явной установки.
      #    Но сначала попробуем позволить Conan установить необходимые пакеты.

      # 6. Установка зависимостей через Conan
      - name: Install Dependencies with Conan
        run: |
          sudo su apt-get install libegl1-mesa-dev
          sudo conan install . --output-folder=Engine/ThirdParty --build=missing --profile=./conanProfileDebugLinux --profile:build=./conanProfileDebugLinux
          sudo mkdir build
          
      # 7. Установка CMake
      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.29.2'

      # 8. Установка Vulkan SDK и Shaderc (для glslc)
      - name: Install Vulkan SDK and Shaderc
        run: |
          sudo apt-get update
          sudo apt-get install -y vulkan-sdk shaderc

      # 9. Генерация файлов проекта с помощью CMake
      - name: Generate Project Files with CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE="Engine/ThirdParty/conan_toolchain.cmake" -DCMAKE_BUILD_TYPE=Debug

      # 10. Предварительная компиляция шейдеров
      - name: Precompile Shaders
        run: |
          glslc Engine/Core/Shaders/shader.vert -o build/vert.spv
          glslc Engine/Core/Shaders/shader.frag -o build/frag.spv

      # 11. Сборка проекта
      - name: Build Project
        run: |
          cmake --build build --preset conan-debug

      # 12. Запуск тестов
      - name: Run Tests
        run: |
          cd build
          ctest --test-dir ./build --output-on-failure -C Debug

